# workflow 的名称
name: Deploy bj_hospital_web

# 定义触发事件，push 推送到 main 分支或手动触发
on:
  # 当推送到 main 分支时触发工作流
  push:
    branches: [ main ]

  # 允许从 Actions 标签页手动运行此工作流
  workflow_dispatch:

# 工作流由一个或多个作业组成，这些作业可以顺序或并行运行
jobs:
  develop_build:
    # 定义运行的环境，这里使用最新版的 Ubuntu
    runs-on: ubuntu-latest
    steps:
      # 第一步：拉取最新提交的代码到虚拟机中
      - name: Pull code
        uses: actions/checkout@v3

      # 加载 config.yml 文件内容
      - name: Load config
        id: config
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          sudo curl -L -o /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          echo "HOST=$(yq e .server.host .github/workflows/config.yml)" >> $GITHUB_ENV
          echo "USERNAME=$(yq e .server.username .github/workflows/config.yml)" >> $GITHUB_ENV
          echo "PASSWORD=$(yq e .server.password .github/workflows/config.yml)" >> $GITHUB_ENV
          echo "REMOTE_PATH=$(yq e .server.remote_path .github/workflows/config.yml)" >> $GITHUB_ENV

      # 第二步：设置 Node.js 环境
      - name: use Node.js
        # 使用 actions/setup-node 安装 Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x # 指定 Node.js 版本为 16.x

      # 第三步：配置国内源以加快依赖项安装速度
      - name: config
        run: yarn config set registry https://registry.npmmirror.com/

      # 第四步：安装项目依赖
      - name: dependency
        run: yarn

      # 第五步：打包项目
      - name: build
        run: yarn run build

      # 第六步：通过 SSH 连接到远程服务器并删除指定目录中的所有文件
      - name: Remove Dist
        run: sshpass -p ${{ env.PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ env.USERNAME }}@${{ env.HOST }} "cd ${{ env.REMOTE_PATH }} && rm -rf ./*"

      # 第七步：通过 SCP 将本地生成的打包文件上传到远程服务器的指定目录
      - name: Upload
        run: sshpass -p ${{ env.PASSWORD }} scp -r -o StrictHostKeyChecking=no ./dist/* ${{ env.USERNAME }}@${{ env.HOST }}:${{ env.REMOTE_PATH }}
